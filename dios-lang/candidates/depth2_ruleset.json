[
  {
    "num_rules": 0,
    "time generated": "2023-10-18 11:47:03.517781 -05:00",
    "run name": "slow cvec match, up to depth 5, using depth instead of atoms",
    "eqs": []
  },
  {
    "num_rules": 22,
    "time generated": "2023-10-18 13:08:23.094060 -05:00",
    "run name": "slow cvec match, up to depth 5, using depth instead of atoms",
    "eqs": [
      {
        "lhs": "(- ?a 0)",
        "rhs": "(/ ?a 1)",
        "bidirectional": false
      },
      {
        "lhs": "(/ ?a 1)",
        "rhs": "(- ?a 0)",
        "bidirectional": false
      },
      {
        "lhs": "(VecMULS ?c ?a ?b)",
        "rhs": "(VecMULS ?c ?b ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(VecMULS ?c ?b ?a)",
        "rhs": "(VecMULS ?c ?a ?b)",
        "bidirectional": false
      },
      {
        "lhs": "(VecMAC ?c ?a ?b)",
        "rhs": "(VecMAC ?c ?b ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(VecMAC ?c ?b ?a)",
        "rhs": "(VecMAC ?c ?a ?b)",
        "bidirectional": false
      },
      {
        "lhs": "(VecMul ?a ?b)",
        "rhs": "(VecMul ?b ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(VecMul ?b ?a)",
        "rhs": "(VecMul ?a ?b)",
        "bidirectional": false
      },
      {
        "lhs": "(* ?a ?b)",
        "rhs": "(* ?b ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(* ?b ?a)",
        "rhs": "(* ?a ?b)",
        "bidirectional": false
      },
      {
        "lhs": "(+ ?a ?b)",
        "rhs": "(+ ?b ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(+ ?b ?a)",
        "rhs": "(+ ?a ?b)",
        "bidirectional": false
      },
      {
        "lhs": "(VecAdd ?a ?b)",
        "rhs": "(VecAdd ?b ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(VecAdd ?b ?a)",
        "rhs": "(VecAdd ?a ?b)",
        "bidirectional": false
      },
      {
        "lhs": "(- 0 ?a)",
        "rhs": "(neg ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(neg ?a)",
        "rhs": "(- 0 ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(- ?a ?a)",
        "rhs": "(* ?a 0)",
        "bidirectional": false
      },
      {
        "lhs": "(* ?a 0)",
        "rhs": "(- ?a ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(/ ?a 1)",
        "rhs": "(+ ?a 0)",
        "bidirectional": false
      },
      {
        "lhs": "(+ ?a 0)",
        "rhs": "(/ ?a 1)",
        "bidirectional": false
      },
      {
        "lhs": "(/ ?a 1)",
        "rhs": "(* ?a 1)",
        "bidirectional": false
      },
      {
        "lhs": "(* ?a 1)",
        "rhs": "(/ ?a 1)",
        "bidirectional": false
      }
    ]
  },
  {
    "num_rules": 22,
    "time generated": "2023-10-18 13:11:32.747506 -05:00",
    "run name": "slow cvec match, up to depth 5, using depth instead of atoms",
    "eqs": [
      {
        "lhs": "(- ?a 0)",
        "rhs": "(/ ?a 1)",
        "bidirectional": false
      },
      {
        "lhs": "(/ ?a 1)",
        "rhs": "(- ?a 0)",
        "bidirectional": false
      },
      {
        "lhs": "(VecMULS ?c ?a ?b)",
        "rhs": "(VecMULS ?c ?b ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(VecMULS ?c ?b ?a)",
        "rhs": "(VecMULS ?c ?a ?b)",
        "bidirectional": false
      },
      {
        "lhs": "(VecMAC ?c ?a ?b)",
        "rhs": "(VecMAC ?c ?b ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(VecMAC ?c ?b ?a)",
        "rhs": "(VecMAC ?c ?a ?b)",
        "bidirectional": false
      },
      {
        "lhs": "(VecMul ?a ?b)",
        "rhs": "(VecMul ?b ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(VecMul ?b ?a)",
        "rhs": "(VecMul ?a ?b)",
        "bidirectional": false
      },
      {
        "lhs": "(* ?a ?b)",
        "rhs": "(* ?b ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(* ?b ?a)",
        "rhs": "(* ?a ?b)",
        "bidirectional": false
      },
      {
        "lhs": "(+ ?a ?b)",
        "rhs": "(+ ?b ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(+ ?b ?a)",
        "rhs": "(+ ?a ?b)",
        "bidirectional": false
      },
      {
        "lhs": "(VecAdd ?a ?b)",
        "rhs": "(VecAdd ?b ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(VecAdd ?b ?a)",
        "rhs": "(VecAdd ?a ?b)",
        "bidirectional": false
      },
      {
        "lhs": "(- 0 ?a)",
        "rhs": "(neg ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(neg ?a)",
        "rhs": "(- 0 ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(- ?a ?a)",
        "rhs": "(* ?a 0)",
        "bidirectional": false
      },
      {
        "lhs": "(* ?a 0)",
        "rhs": "(- ?a ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(/ ?a 1)",
        "rhs": "(+ ?a 0)",
        "bidirectional": false
      },
      {
        "lhs": "(+ ?a 0)",
        "rhs": "(/ ?a 1)",
        "bidirectional": false
      },
      {
        "lhs": "(/ ?a 1)",
        "rhs": "(* ?a 1)",
        "bidirectional": false
      },
      {
        "lhs": "(* ?a 1)",
        "rhs": "(/ ?a 1)",
        "bidirectional": false
      }
    ]
  },
  {
    "num_rules": 22,
    "time generated": "2023-10-18 13:17:06.132888 -05:00",
    "run name": "slow cvec match, up to depth 5, using depth instead of atoms",
    "eqs": [
      {
        "lhs": "(- ?a 0)",
        "rhs": "(/ ?a 1)",
        "bidirectional": false
      },
      {
        "lhs": "(/ ?a 1)",
        "rhs": "(- ?a 0)",
        "bidirectional": false
      },
      {
        "lhs": "(VecMULS ?c ?a ?b)",
        "rhs": "(VecMULS ?c ?b ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(VecMULS ?c ?b ?a)",
        "rhs": "(VecMULS ?c ?a ?b)",
        "bidirectional": false
      },
      {
        "lhs": "(VecMAC ?c ?a ?b)",
        "rhs": "(VecMAC ?c ?b ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(VecMAC ?c ?b ?a)",
        "rhs": "(VecMAC ?c ?a ?b)",
        "bidirectional": false
      },
      {
        "lhs": "(VecMul ?a ?b)",
        "rhs": "(VecMul ?b ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(VecMul ?b ?a)",
        "rhs": "(VecMul ?a ?b)",
        "bidirectional": false
      },
      {
        "lhs": "(* ?a ?b)",
        "rhs": "(* ?b ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(* ?b ?a)",
        "rhs": "(* ?a ?b)",
        "bidirectional": false
      },
      {
        "lhs": "(+ ?a ?b)",
        "rhs": "(+ ?b ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(+ ?b ?a)",
        "rhs": "(+ ?a ?b)",
        "bidirectional": false
      },
      {
        "lhs": "(VecAdd ?a ?b)",
        "rhs": "(VecAdd ?b ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(VecAdd ?b ?a)",
        "rhs": "(VecAdd ?a ?b)",
        "bidirectional": false
      },
      {
        "lhs": "(- 0 ?a)",
        "rhs": "(neg ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(neg ?a)",
        "rhs": "(- 0 ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(- ?a ?a)",
        "rhs": "(* ?a 0)",
        "bidirectional": false
      },
      {
        "lhs": "(* ?a 0)",
        "rhs": "(- ?a ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(/ ?a 1)",
        "rhs": "(+ ?a 0)",
        "bidirectional": false
      },
      {
        "lhs": "(+ ?a 0)",
        "rhs": "(/ ?a 1)",
        "bidirectional": false
      },
      {
        "lhs": "(/ ?a 1)",
        "rhs": "(* ?a 1)",
        "bidirectional": false
      },
      {
        "lhs": "(* ?a 1)",
        "rhs": "(/ ?a 1)",
        "bidirectional": false
      }
    ]
  },
  {
    "num_rules": 22,
    "time generated": "2023-10-18 13:18:30.532711 -05:00",
    "run name": "slow cvec match, up to depth 5, using depth instead of atoms",
    "eqs": [
      {
        "lhs": "(- ?a 0)",
        "rhs": "(/ ?a 1)",
        "bidirectional": false
      },
      {
        "lhs": "(/ ?a 1)",
        "rhs": "(- ?a 0)",
        "bidirectional": false
      },
      {
        "lhs": "(VecMULS ?c ?a ?b)",
        "rhs": "(VecMULS ?c ?b ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(VecMULS ?c ?b ?a)",
        "rhs": "(VecMULS ?c ?a ?b)",
        "bidirectional": false
      },
      {
        "lhs": "(VecMAC ?c ?a ?b)",
        "rhs": "(VecMAC ?c ?b ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(VecMAC ?c ?b ?a)",
        "rhs": "(VecMAC ?c ?a ?b)",
        "bidirectional": false
      },
      {
        "lhs": "(VecMul ?a ?b)",
        "rhs": "(VecMul ?b ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(VecMul ?b ?a)",
        "rhs": "(VecMul ?a ?b)",
        "bidirectional": false
      },
      {
        "lhs": "(* ?a ?b)",
        "rhs": "(* ?b ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(* ?b ?a)",
        "rhs": "(* ?a ?b)",
        "bidirectional": false
      },
      {
        "lhs": "(+ ?a ?b)",
        "rhs": "(+ ?b ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(+ ?b ?a)",
        "rhs": "(+ ?a ?b)",
        "bidirectional": false
      },
      {
        "lhs": "(VecAdd ?a ?b)",
        "rhs": "(VecAdd ?b ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(VecAdd ?b ?a)",
        "rhs": "(VecAdd ?a ?b)",
        "bidirectional": false
      },
      {
        "lhs": "(- 0 ?a)",
        "rhs": "(neg ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(neg ?a)",
        "rhs": "(- 0 ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(- ?a ?a)",
        "rhs": "(* ?a 0)",
        "bidirectional": false
      },
      {
        "lhs": "(* ?a 0)",
        "rhs": "(- ?a ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(/ ?a 1)",
        "rhs": "(+ ?a 0)",
        "bidirectional": false
      },
      {
        "lhs": "(+ ?a 0)",
        "rhs": "(/ ?a 1)",
        "bidirectional": false
      },
      {
        "lhs": "(/ ?a 1)",
        "rhs": "(* ?a 1)",
        "bidirectional": false
      },
      {
        "lhs": "(* ?a 1)",
        "rhs": "(/ ?a 1)",
        "bidirectional": false
      }
    ]
  },
  {
    "num_rules": 22,
    "time generated": "2023-10-18 13:19:24.086398 -05:00",
    "run name": "slow cvec match, up to depth 5, using depth instead of atoms",
    "eqs": [
      {
        "lhs": "(- ?a 0)",
        "rhs": "(/ ?a 1)",
        "bidirectional": false
      },
      {
        "lhs": "(/ ?a 1)",
        "rhs": "(- ?a 0)",
        "bidirectional": false
      },
      {
        "lhs": "(VecMULS ?c ?a ?b)",
        "rhs": "(VecMULS ?c ?b ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(VecMULS ?c ?b ?a)",
        "rhs": "(VecMULS ?c ?a ?b)",
        "bidirectional": false
      },
      {
        "lhs": "(VecMAC ?c ?a ?b)",
        "rhs": "(VecMAC ?c ?b ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(VecMAC ?c ?b ?a)",
        "rhs": "(VecMAC ?c ?a ?b)",
        "bidirectional": false
      },
      {
        "lhs": "(VecMul ?a ?b)",
        "rhs": "(VecMul ?b ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(VecMul ?b ?a)",
        "rhs": "(VecMul ?a ?b)",
        "bidirectional": false
      },
      {
        "lhs": "(* ?a ?b)",
        "rhs": "(* ?b ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(* ?b ?a)",
        "rhs": "(* ?a ?b)",
        "bidirectional": false
      },
      {
        "lhs": "(+ ?a ?b)",
        "rhs": "(+ ?b ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(+ ?b ?a)",
        "rhs": "(+ ?a ?b)",
        "bidirectional": false
      },
      {
        "lhs": "(VecAdd ?a ?b)",
        "rhs": "(VecAdd ?b ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(VecAdd ?b ?a)",
        "rhs": "(VecAdd ?a ?b)",
        "bidirectional": false
      },
      {
        "lhs": "(- 0 ?a)",
        "rhs": "(neg ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(neg ?a)",
        "rhs": "(- 0 ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(- ?a ?a)",
        "rhs": "(* ?a 0)",
        "bidirectional": false
      },
      {
        "lhs": "(* ?a 0)",
        "rhs": "(- ?a ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(/ ?a 1)",
        "rhs": "(+ ?a 0)",
        "bidirectional": false
      },
      {
        "lhs": "(+ ?a 0)",
        "rhs": "(/ ?a 1)",
        "bidirectional": false
      },
      {
        "lhs": "(/ ?a 1)",
        "rhs": "(* ?a 1)",
        "bidirectional": false
      },
      {
        "lhs": "(* ?a 1)",
        "rhs": "(/ ?a 1)",
        "bidirectional": false
      }
    ]
  },
  {
    "num_rules": 22,
    "time generated": "2023-10-18 13:21:26.317754 -05:00",
    "run name": "slow cvec match, up to depth 5, using depth instead of atoms",
    "eqs": [
      {
        "lhs": "(- ?a 0)",
        "rhs": "(/ ?a 1)",
        "bidirectional": false
      },
      {
        "lhs": "(/ ?a 1)",
        "rhs": "(- ?a 0)",
        "bidirectional": false
      },
      {
        "lhs": "(VecMULS ?c ?a ?b)",
        "rhs": "(VecMULS ?c ?b ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(VecMULS ?c ?b ?a)",
        "rhs": "(VecMULS ?c ?a ?b)",
        "bidirectional": false
      },
      {
        "lhs": "(VecMAC ?c ?a ?b)",
        "rhs": "(VecMAC ?c ?b ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(VecMAC ?c ?b ?a)",
        "rhs": "(VecMAC ?c ?a ?b)",
        "bidirectional": false
      },
      {
        "lhs": "(VecMul ?a ?b)",
        "rhs": "(VecMul ?b ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(VecMul ?b ?a)",
        "rhs": "(VecMul ?a ?b)",
        "bidirectional": false
      },
      {
        "lhs": "(* ?a ?b)",
        "rhs": "(* ?b ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(* ?b ?a)",
        "rhs": "(* ?a ?b)",
        "bidirectional": false
      },
      {
        "lhs": "(+ ?a ?b)",
        "rhs": "(+ ?b ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(+ ?b ?a)",
        "rhs": "(+ ?a ?b)",
        "bidirectional": false
      },
      {
        "lhs": "(VecAdd ?a ?b)",
        "rhs": "(VecAdd ?b ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(VecAdd ?b ?a)",
        "rhs": "(VecAdd ?a ?b)",
        "bidirectional": false
      },
      {
        "lhs": "(- 0 ?a)",
        "rhs": "(neg ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(neg ?a)",
        "rhs": "(- 0 ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(- ?a ?a)",
        "rhs": "(* ?a 0)",
        "bidirectional": false
      },
      {
        "lhs": "(* ?a 0)",
        "rhs": "(- ?a ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(/ ?a 1)",
        "rhs": "(+ ?a 0)",
        "bidirectional": false
      },
      {
        "lhs": "(+ ?a 0)",
        "rhs": "(/ ?a 1)",
        "bidirectional": false
      },
      {
        "lhs": "(/ ?a 1)",
        "rhs": "(* ?a 1)",
        "bidirectional": false
      },
      {
        "lhs": "(* ?a 1)",
        "rhs": "(/ ?a 1)",
        "bidirectional": false
      }
    ]
  },
  {
    "num_rules": 22,
    "time generated": "2023-10-18 13:27:32.283813 -05:00",
    "run name": "slow cvec match, up to depth 5, using depth instead of atoms",
    "eqs": [
      {
        "lhs": "(- ?a 0)",
        "rhs": "(/ ?a 1)",
        "bidirectional": false
      },
      {
        "lhs": "(/ ?a 1)",
        "rhs": "(- ?a 0)",
        "bidirectional": false
      },
      {
        "lhs": "(VecMULS ?c ?a ?b)",
        "rhs": "(VecMULS ?c ?b ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(VecMULS ?c ?b ?a)",
        "rhs": "(VecMULS ?c ?a ?b)",
        "bidirectional": false
      },
      {
        "lhs": "(VecMAC ?c ?a ?b)",
        "rhs": "(VecMAC ?c ?b ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(VecMAC ?c ?b ?a)",
        "rhs": "(VecMAC ?c ?a ?b)",
        "bidirectional": false
      },
      {
        "lhs": "(VecMul ?a ?b)",
        "rhs": "(VecMul ?b ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(VecMul ?b ?a)",
        "rhs": "(VecMul ?a ?b)",
        "bidirectional": false
      },
      {
        "lhs": "(* ?a ?b)",
        "rhs": "(* ?b ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(* ?b ?a)",
        "rhs": "(* ?a ?b)",
        "bidirectional": false
      },
      {
        "lhs": "(+ ?a ?b)",
        "rhs": "(+ ?b ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(+ ?b ?a)",
        "rhs": "(+ ?a ?b)",
        "bidirectional": false
      },
      {
        "lhs": "(VecAdd ?a ?b)",
        "rhs": "(VecAdd ?b ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(VecAdd ?b ?a)",
        "rhs": "(VecAdd ?a ?b)",
        "bidirectional": false
      },
      {
        "lhs": "(- 0 ?a)",
        "rhs": "(neg ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(neg ?a)",
        "rhs": "(- 0 ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(- ?a ?a)",
        "rhs": "(* ?a 0)",
        "bidirectional": false
      },
      {
        "lhs": "(* ?a 0)",
        "rhs": "(- ?a ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(/ ?a 1)",
        "rhs": "(+ ?a 0)",
        "bidirectional": false
      },
      {
        "lhs": "(+ ?a 0)",
        "rhs": "(/ ?a 1)",
        "bidirectional": false
      },
      {
        "lhs": "(/ ?a 1)",
        "rhs": "(* ?a 1)",
        "bidirectional": false
      },
      {
        "lhs": "(* ?a 1)",
        "rhs": "(/ ?a 1)",
        "bidirectional": false
      }
    ]
  },
  {
    "num_rules": 22,
    "time generated": "2023-10-18 13:28:17.109436 -05:00",
    "run name": "slow cvec match, up to depth 5, using depth instead of atoms",
    "eqs": [
      {
        "lhs": "(- ?a 0)",
        "rhs": "(/ ?a 1)",
        "bidirectional": false
      },
      {
        "lhs": "(/ ?a 1)",
        "rhs": "(- ?a 0)",
        "bidirectional": false
      },
      {
        "lhs": "(VecMULS ?c ?a ?b)",
        "rhs": "(VecMULS ?c ?b ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(VecMULS ?c ?b ?a)",
        "rhs": "(VecMULS ?c ?a ?b)",
        "bidirectional": false
      },
      {
        "lhs": "(VecMAC ?c ?a ?b)",
        "rhs": "(VecMAC ?c ?b ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(VecMAC ?c ?b ?a)",
        "rhs": "(VecMAC ?c ?a ?b)",
        "bidirectional": false
      },
      {
        "lhs": "(VecMul ?a ?b)",
        "rhs": "(VecMul ?b ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(VecMul ?b ?a)",
        "rhs": "(VecMul ?a ?b)",
        "bidirectional": false
      },
      {
        "lhs": "(* ?a ?b)",
        "rhs": "(* ?b ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(* ?b ?a)",
        "rhs": "(* ?a ?b)",
        "bidirectional": false
      },
      {
        "lhs": "(+ ?a ?b)",
        "rhs": "(+ ?b ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(+ ?b ?a)",
        "rhs": "(+ ?a ?b)",
        "bidirectional": false
      },
      {
        "lhs": "(VecAdd ?a ?b)",
        "rhs": "(VecAdd ?b ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(VecAdd ?b ?a)",
        "rhs": "(VecAdd ?a ?b)",
        "bidirectional": false
      },
      {
        "lhs": "(- 0 ?a)",
        "rhs": "(neg ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(neg ?a)",
        "rhs": "(- 0 ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(- ?a ?a)",
        "rhs": "(* ?a 0)",
        "bidirectional": false
      },
      {
        "lhs": "(* ?a 0)",
        "rhs": "(- ?a ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(/ ?a 1)",
        "rhs": "(+ ?a 0)",
        "bidirectional": false
      },
      {
        "lhs": "(+ ?a 0)",
        "rhs": "(/ ?a 1)",
        "bidirectional": false
      },
      {
        "lhs": "(/ ?a 1)",
        "rhs": "(* ?a 1)",
        "bidirectional": false
      },
      {
        "lhs": "(* ?a 1)",
        "rhs": "(/ ?a 1)",
        "bidirectional": false
      }
    ]
  },
  {
    "num_rules": 22,
    "time generated": "2023-10-18 13:28:50.091826 -05:00",
    "run name": "slow cvec match, up to depth 5, using depth instead of atoms",
    "eqs": [
      {
        "lhs": "(- ?a 0)",
        "rhs": "(/ ?a 1)",
        "bidirectional": false
      },
      {
        "lhs": "(/ ?a 1)",
        "rhs": "(- ?a 0)",
        "bidirectional": false
      },
      {
        "lhs": "(VecMULS ?c ?a ?b)",
        "rhs": "(VecMULS ?c ?b ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(VecMULS ?c ?b ?a)",
        "rhs": "(VecMULS ?c ?a ?b)",
        "bidirectional": false
      },
      {
        "lhs": "(VecMAC ?c ?a ?b)",
        "rhs": "(VecMAC ?c ?b ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(VecMAC ?c ?b ?a)",
        "rhs": "(VecMAC ?c ?a ?b)",
        "bidirectional": false
      },
      {
        "lhs": "(VecMul ?a ?b)",
        "rhs": "(VecMul ?b ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(VecMul ?b ?a)",
        "rhs": "(VecMul ?a ?b)",
        "bidirectional": false
      },
      {
        "lhs": "(* ?a ?b)",
        "rhs": "(* ?b ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(* ?b ?a)",
        "rhs": "(* ?a ?b)",
        "bidirectional": false
      },
      {
        "lhs": "(+ ?a ?b)",
        "rhs": "(+ ?b ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(+ ?b ?a)",
        "rhs": "(+ ?a ?b)",
        "bidirectional": false
      },
      {
        "lhs": "(VecAdd ?a ?b)",
        "rhs": "(VecAdd ?b ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(VecAdd ?b ?a)",
        "rhs": "(VecAdd ?a ?b)",
        "bidirectional": false
      },
      {
        "lhs": "(- 0 ?a)",
        "rhs": "(neg ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(neg ?a)",
        "rhs": "(- 0 ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(- ?a ?a)",
        "rhs": "(* ?a 0)",
        "bidirectional": false
      },
      {
        "lhs": "(* ?a 0)",
        "rhs": "(- ?a ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(/ ?a 1)",
        "rhs": "(+ ?a 0)",
        "bidirectional": false
      },
      {
        "lhs": "(+ ?a 0)",
        "rhs": "(/ ?a 1)",
        "bidirectional": false
      },
      {
        "lhs": "(/ ?a 1)",
        "rhs": "(* ?a 1)",
        "bidirectional": false
      },
      {
        "lhs": "(* ?a 1)",
        "rhs": "(/ ?a 1)",
        "bidirectional": false
      }
    ]
  },
  {
    "num_rules": 22,
    "time generated": "2023-10-18 13:32:56.137359 -05:00",
    "run name": "slow cvec match, up to depth 5, using depth instead of atoms",
    "eqs": [
      {
        "lhs": "(- ?a 0)",
        "rhs": "(/ ?a 1)",
        "bidirectional": false
      },
      {
        "lhs": "(/ ?a 1)",
        "rhs": "(- ?a 0)",
        "bidirectional": false
      },
      {
        "lhs": "(VecMULS ?c ?a ?b)",
        "rhs": "(VecMULS ?c ?b ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(VecMULS ?c ?b ?a)",
        "rhs": "(VecMULS ?c ?a ?b)",
        "bidirectional": false
      },
      {
        "lhs": "(VecMAC ?c ?a ?b)",
        "rhs": "(VecMAC ?c ?b ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(VecMAC ?c ?b ?a)",
        "rhs": "(VecMAC ?c ?a ?b)",
        "bidirectional": false
      },
      {
        "lhs": "(VecMul ?a ?b)",
        "rhs": "(VecMul ?b ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(VecMul ?b ?a)",
        "rhs": "(VecMul ?a ?b)",
        "bidirectional": false
      },
      {
        "lhs": "(* ?a ?b)",
        "rhs": "(* ?b ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(* ?b ?a)",
        "rhs": "(* ?a ?b)",
        "bidirectional": false
      },
      {
        "lhs": "(+ ?a ?b)",
        "rhs": "(+ ?b ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(+ ?b ?a)",
        "rhs": "(+ ?a ?b)",
        "bidirectional": false
      },
      {
        "lhs": "(VecAdd ?a ?b)",
        "rhs": "(VecAdd ?b ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(VecAdd ?b ?a)",
        "rhs": "(VecAdd ?a ?b)",
        "bidirectional": false
      },
      {
        "lhs": "(- 0 ?a)",
        "rhs": "(neg ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(neg ?a)",
        "rhs": "(- 0 ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(- ?a ?a)",
        "rhs": "(* ?a 0)",
        "bidirectional": false
      },
      {
        "lhs": "(* ?a 0)",
        "rhs": "(- ?a ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(/ ?a 1)",
        "rhs": "(+ ?a 0)",
        "bidirectional": false
      },
      {
        "lhs": "(+ ?a 0)",
        "rhs": "(/ ?a 1)",
        "bidirectional": false
      },
      {
        "lhs": "(/ ?a 1)",
        "rhs": "(* ?a 1)",
        "bidirectional": false
      },
      {
        "lhs": "(* ?a 1)",
        "rhs": "(/ ?a 1)",
        "bidirectional": false
      }
    ]
  },
  {
    "num_rules": 22,
    "time generated": "2023-10-18 13:33:52.010737 -05:00",
    "run name": "slow cvec match, up to depth 5, using depth instead of atoms",
    "eqs": [
      {
        "lhs": "(- ?a 0)",
        "rhs": "(/ ?a 1)",
        "bidirectional": false
      },
      {
        "lhs": "(/ ?a 1)",
        "rhs": "(- ?a 0)",
        "bidirectional": false
      },
      {
        "lhs": "(VecMULS ?c ?a ?b)",
        "rhs": "(VecMULS ?c ?b ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(VecMULS ?c ?b ?a)",
        "rhs": "(VecMULS ?c ?a ?b)",
        "bidirectional": false
      },
      {
        "lhs": "(VecMAC ?c ?a ?b)",
        "rhs": "(VecMAC ?c ?b ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(VecMAC ?c ?b ?a)",
        "rhs": "(VecMAC ?c ?a ?b)",
        "bidirectional": false
      },
      {
        "lhs": "(VecMul ?a ?b)",
        "rhs": "(VecMul ?b ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(VecMul ?b ?a)",
        "rhs": "(VecMul ?a ?b)",
        "bidirectional": false
      },
      {
        "lhs": "(* ?a ?b)",
        "rhs": "(* ?b ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(* ?b ?a)",
        "rhs": "(* ?a ?b)",
        "bidirectional": false
      },
      {
        "lhs": "(+ ?a ?b)",
        "rhs": "(+ ?b ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(+ ?b ?a)",
        "rhs": "(+ ?a ?b)",
        "bidirectional": false
      },
      {
        "lhs": "(VecAdd ?a ?b)",
        "rhs": "(VecAdd ?b ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(VecAdd ?b ?a)",
        "rhs": "(VecAdd ?a ?b)",
        "bidirectional": false
      },
      {
        "lhs": "(- 0 ?a)",
        "rhs": "(neg ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(neg ?a)",
        "rhs": "(- 0 ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(- ?a ?a)",
        "rhs": "(* ?a 0)",
        "bidirectional": false
      },
      {
        "lhs": "(* ?a 0)",
        "rhs": "(- ?a ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(/ ?a 1)",
        "rhs": "(+ ?a 0)",
        "bidirectional": false
      },
      {
        "lhs": "(+ ?a 0)",
        "rhs": "(/ ?a 1)",
        "bidirectional": false
      },
      {
        "lhs": "(/ ?a 1)",
        "rhs": "(* ?a 1)",
        "bidirectional": false
      },
      {
        "lhs": "(* ?a 1)",
        "rhs": "(/ ?a 1)",
        "bidirectional": false
      }
    ]
  },
  {
    "num_rules": 22,
    "time generated": "2023-10-18 13:35:10.670182 -05:00",
    "run name": "slow cvec match, up to depth 5, using depth instead of atoms",
    "eqs": [
      {
        "lhs": "(- ?a 0)",
        "rhs": "(/ ?a 1)",
        "bidirectional": false
      },
      {
        "lhs": "(/ ?a 1)",
        "rhs": "(- ?a 0)",
        "bidirectional": false
      },
      {
        "lhs": "(VecMULS ?c ?a ?b)",
        "rhs": "(VecMULS ?c ?b ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(VecMULS ?c ?b ?a)",
        "rhs": "(VecMULS ?c ?a ?b)",
        "bidirectional": false
      },
      {
        "lhs": "(VecMAC ?c ?a ?b)",
        "rhs": "(VecMAC ?c ?b ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(VecMAC ?c ?b ?a)",
        "rhs": "(VecMAC ?c ?a ?b)",
        "bidirectional": false
      },
      {
        "lhs": "(VecMul ?a ?b)",
        "rhs": "(VecMul ?b ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(VecMul ?b ?a)",
        "rhs": "(VecMul ?a ?b)",
        "bidirectional": false
      },
      {
        "lhs": "(* ?a ?b)",
        "rhs": "(* ?b ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(* ?b ?a)",
        "rhs": "(* ?a ?b)",
        "bidirectional": false
      },
      {
        "lhs": "(+ ?a ?b)",
        "rhs": "(+ ?b ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(+ ?b ?a)",
        "rhs": "(+ ?a ?b)",
        "bidirectional": false
      },
      {
        "lhs": "(VecAdd ?a ?b)",
        "rhs": "(VecAdd ?b ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(VecAdd ?b ?a)",
        "rhs": "(VecAdd ?a ?b)",
        "bidirectional": false
      },
      {
        "lhs": "(- 0 ?a)",
        "rhs": "(neg ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(neg ?a)",
        "rhs": "(- 0 ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(- ?a ?a)",
        "rhs": "(* ?a 0)",
        "bidirectional": false
      },
      {
        "lhs": "(* ?a 0)",
        "rhs": "(- ?a ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(/ ?a 1)",
        "rhs": "(+ ?a 0)",
        "bidirectional": false
      },
      {
        "lhs": "(+ ?a 0)",
        "rhs": "(/ ?a 1)",
        "bidirectional": false
      },
      {
        "lhs": "(/ ?a 1)",
        "rhs": "(* ?a 1)",
        "bidirectional": false
      },
      {
        "lhs": "(* ?a 1)",
        "rhs": "(/ ?a 1)",
        "bidirectional": false
      }
    ]
  },
  {
    "num_rules": 22,
    "time generated": "2023-10-18 13:36:51.556968 -05:00",
    "run name": "slow cvec match, up to depth 5, using depth instead of atoms",
    "eqs": [
      {
        "lhs": "(- ?a 0)",
        "rhs": "(/ ?a 1)",
        "bidirectional": false
      },
      {
        "lhs": "(/ ?a 1)",
        "rhs": "(- ?a 0)",
        "bidirectional": false
      },
      {
        "lhs": "(VecMULS ?c ?a ?b)",
        "rhs": "(VecMULS ?c ?b ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(VecMULS ?c ?b ?a)",
        "rhs": "(VecMULS ?c ?a ?b)",
        "bidirectional": false
      },
      {
        "lhs": "(VecMAC ?c ?a ?b)",
        "rhs": "(VecMAC ?c ?b ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(VecMAC ?c ?b ?a)",
        "rhs": "(VecMAC ?c ?a ?b)",
        "bidirectional": false
      },
      {
        "lhs": "(VecMul ?a ?b)",
        "rhs": "(VecMul ?b ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(VecMul ?b ?a)",
        "rhs": "(VecMul ?a ?b)",
        "bidirectional": false
      },
      {
        "lhs": "(* ?a ?b)",
        "rhs": "(* ?b ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(* ?b ?a)",
        "rhs": "(* ?a ?b)",
        "bidirectional": false
      },
      {
        "lhs": "(+ ?a ?b)",
        "rhs": "(+ ?b ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(+ ?b ?a)",
        "rhs": "(+ ?a ?b)",
        "bidirectional": false
      },
      {
        "lhs": "(VecAdd ?a ?b)",
        "rhs": "(VecAdd ?b ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(VecAdd ?b ?a)",
        "rhs": "(VecAdd ?a ?b)",
        "bidirectional": false
      },
      {
        "lhs": "(- 0 ?a)",
        "rhs": "(neg ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(neg ?a)",
        "rhs": "(- 0 ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(- ?a ?a)",
        "rhs": "(* ?a 0)",
        "bidirectional": false
      },
      {
        "lhs": "(* ?a 0)",
        "rhs": "(- ?a ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(/ ?a 1)",
        "rhs": "(+ ?a 0)",
        "bidirectional": false
      },
      {
        "lhs": "(+ ?a 0)",
        "rhs": "(/ ?a 1)",
        "bidirectional": false
      },
      {
        "lhs": "(/ ?a 1)",
        "rhs": "(* ?a 1)",
        "bidirectional": false
      },
      {
        "lhs": "(* ?a 1)",
        "rhs": "(/ ?a 1)",
        "bidirectional": false
      }
    ]
  },
  {
    "num_rules": 22,
    "time generated": "2023-10-18 13:37:43.367540 -05:00",
    "run name": "slow cvec match, up to depth 5, using depth instead of atoms",
    "eqs": [
      {
        "lhs": "(- ?a 0)",
        "rhs": "(/ ?a 1)",
        "bidirectional": false
      },
      {
        "lhs": "(/ ?a 1)",
        "rhs": "(- ?a 0)",
        "bidirectional": false
      },
      {
        "lhs": "(VecMULS ?c ?a ?b)",
        "rhs": "(VecMULS ?c ?b ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(VecMULS ?c ?b ?a)",
        "rhs": "(VecMULS ?c ?a ?b)",
        "bidirectional": false
      },
      {
        "lhs": "(VecMAC ?c ?a ?b)",
        "rhs": "(VecMAC ?c ?b ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(VecMAC ?c ?b ?a)",
        "rhs": "(VecMAC ?c ?a ?b)",
        "bidirectional": false
      },
      {
        "lhs": "(VecMul ?a ?b)",
        "rhs": "(VecMul ?b ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(VecMul ?b ?a)",
        "rhs": "(VecMul ?a ?b)",
        "bidirectional": false
      },
      {
        "lhs": "(* ?a ?b)",
        "rhs": "(* ?b ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(* ?b ?a)",
        "rhs": "(* ?a ?b)",
        "bidirectional": false
      },
      {
        "lhs": "(+ ?a ?b)",
        "rhs": "(+ ?b ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(+ ?b ?a)",
        "rhs": "(+ ?a ?b)",
        "bidirectional": false
      },
      {
        "lhs": "(VecAdd ?a ?b)",
        "rhs": "(VecAdd ?b ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(VecAdd ?b ?a)",
        "rhs": "(VecAdd ?a ?b)",
        "bidirectional": false
      },
      {
        "lhs": "(- 0 ?a)",
        "rhs": "(neg ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(neg ?a)",
        "rhs": "(- 0 ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(- ?a ?a)",
        "rhs": "(* ?a 0)",
        "bidirectional": false
      },
      {
        "lhs": "(* ?a 0)",
        "rhs": "(- ?a ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(/ ?a 1)",
        "rhs": "(+ ?a 0)",
        "bidirectional": false
      },
      {
        "lhs": "(+ ?a 0)",
        "rhs": "(/ ?a 1)",
        "bidirectional": false
      },
      {
        "lhs": "(/ ?a 1)",
        "rhs": "(* ?a 1)",
        "bidirectional": false
      },
      {
        "lhs": "(* ?a 1)",
        "rhs": "(/ ?a 1)",
        "bidirectional": false
      }
    ]
  },
  {
    "num_rules": 22,
    "time generated": "2023-10-18 13:38:06.748329 -05:00",
    "run name": "slow cvec match, up to depth 5, using depth instead of atoms",
    "eqs": [
      {
        "lhs": "(- ?a 0)",
        "rhs": "(/ ?a 1)",
        "bidirectional": false
      },
      {
        "lhs": "(/ ?a 1)",
        "rhs": "(- ?a 0)",
        "bidirectional": false
      },
      {
        "lhs": "(VecMULS ?c ?a ?b)",
        "rhs": "(VecMULS ?c ?b ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(VecMULS ?c ?b ?a)",
        "rhs": "(VecMULS ?c ?a ?b)",
        "bidirectional": false
      },
      {
        "lhs": "(VecMAC ?c ?a ?b)",
        "rhs": "(VecMAC ?c ?b ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(VecMAC ?c ?b ?a)",
        "rhs": "(VecMAC ?c ?a ?b)",
        "bidirectional": false
      },
      {
        "lhs": "(VecMul ?a ?b)",
        "rhs": "(VecMul ?b ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(VecMul ?b ?a)",
        "rhs": "(VecMul ?a ?b)",
        "bidirectional": false
      },
      {
        "lhs": "(* ?a ?b)",
        "rhs": "(* ?b ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(* ?b ?a)",
        "rhs": "(* ?a ?b)",
        "bidirectional": false
      },
      {
        "lhs": "(+ ?a ?b)",
        "rhs": "(+ ?b ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(+ ?b ?a)",
        "rhs": "(+ ?a ?b)",
        "bidirectional": false
      },
      {
        "lhs": "(VecAdd ?a ?b)",
        "rhs": "(VecAdd ?b ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(VecAdd ?b ?a)",
        "rhs": "(VecAdd ?a ?b)",
        "bidirectional": false
      },
      {
        "lhs": "(- 0 ?a)",
        "rhs": "(neg ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(neg ?a)",
        "rhs": "(- 0 ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(- ?a ?a)",
        "rhs": "(* ?a 0)",
        "bidirectional": false
      },
      {
        "lhs": "(* ?a 0)",
        "rhs": "(- ?a ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(/ ?a 1)",
        "rhs": "(+ ?a 0)",
        "bidirectional": false
      },
      {
        "lhs": "(+ ?a 0)",
        "rhs": "(/ ?a 1)",
        "bidirectional": false
      },
      {
        "lhs": "(/ ?a 1)",
        "rhs": "(* ?a 1)",
        "bidirectional": false
      },
      {
        "lhs": "(* ?a 1)",
        "rhs": "(/ ?a 1)",
        "bidirectional": false
      }
    ]
  },
  {
    "num_rules": 22,
    "time generated": "2023-10-18 13:40:00.792123 -05:00",
    "run name": "slow cvec match, up to depth 5, using depth instead of atoms",
    "eqs": [
      {
        "lhs": "(- ?a 0)",
        "rhs": "(/ ?a 1)",
        "bidirectional": false
      },
      {
        "lhs": "(/ ?a 1)",
        "rhs": "(- ?a 0)",
        "bidirectional": false
      },
      {
        "lhs": "(VecMULS ?c ?a ?b)",
        "rhs": "(VecMULS ?c ?b ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(VecMULS ?c ?b ?a)",
        "rhs": "(VecMULS ?c ?a ?b)",
        "bidirectional": false
      },
      {
        "lhs": "(VecMAC ?c ?a ?b)",
        "rhs": "(VecMAC ?c ?b ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(VecMAC ?c ?b ?a)",
        "rhs": "(VecMAC ?c ?a ?b)",
        "bidirectional": false
      },
      {
        "lhs": "(VecMul ?a ?b)",
        "rhs": "(VecMul ?b ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(VecMul ?b ?a)",
        "rhs": "(VecMul ?a ?b)",
        "bidirectional": false
      },
      {
        "lhs": "(* ?a ?b)",
        "rhs": "(* ?b ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(* ?b ?a)",
        "rhs": "(* ?a ?b)",
        "bidirectional": false
      },
      {
        "lhs": "(+ ?a ?b)",
        "rhs": "(+ ?b ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(+ ?b ?a)",
        "rhs": "(+ ?a ?b)",
        "bidirectional": false
      },
      {
        "lhs": "(VecAdd ?a ?b)",
        "rhs": "(VecAdd ?b ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(VecAdd ?b ?a)",
        "rhs": "(VecAdd ?a ?b)",
        "bidirectional": false
      },
      {
        "lhs": "(- 0 ?a)",
        "rhs": "(neg ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(neg ?a)",
        "rhs": "(- 0 ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(- ?a ?a)",
        "rhs": "(* ?a 0)",
        "bidirectional": false
      },
      {
        "lhs": "(* ?a 0)",
        "rhs": "(- ?a ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(/ ?a 1)",
        "rhs": "(+ ?a 0)",
        "bidirectional": false
      },
      {
        "lhs": "(+ ?a 0)",
        "rhs": "(/ ?a 1)",
        "bidirectional": false
      },
      {
        "lhs": "(/ ?a 1)",
        "rhs": "(* ?a 1)",
        "bidirectional": false
      },
      {
        "lhs": "(* ?a 1)",
        "rhs": "(/ ?a 1)",
        "bidirectional": false
      }
    ]
  },
  {
    "num_rules": 22,
    "time generated": "2023-10-18 13:41:29.865827 -05:00",
    "run name": "slow cvec match, up to depth 5, using depth instead of atoms",
    "eqs": [
      {
        "lhs": "(- ?a 0)",
        "rhs": "(/ ?a 1)",
        "bidirectional": false
      },
      {
        "lhs": "(/ ?a 1)",
        "rhs": "(- ?a 0)",
        "bidirectional": false
      },
      {
        "lhs": "(VecMULS ?c ?a ?b)",
        "rhs": "(VecMULS ?c ?b ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(VecMULS ?c ?b ?a)",
        "rhs": "(VecMULS ?c ?a ?b)",
        "bidirectional": false
      },
      {
        "lhs": "(VecMAC ?c ?a ?b)",
        "rhs": "(VecMAC ?c ?b ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(VecMAC ?c ?b ?a)",
        "rhs": "(VecMAC ?c ?a ?b)",
        "bidirectional": false
      },
      {
        "lhs": "(VecMul ?a ?b)",
        "rhs": "(VecMul ?b ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(VecMul ?b ?a)",
        "rhs": "(VecMul ?a ?b)",
        "bidirectional": false
      },
      {
        "lhs": "(* ?a ?b)",
        "rhs": "(* ?b ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(* ?b ?a)",
        "rhs": "(* ?a ?b)",
        "bidirectional": false
      },
      {
        "lhs": "(+ ?a ?b)",
        "rhs": "(+ ?b ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(+ ?b ?a)",
        "rhs": "(+ ?a ?b)",
        "bidirectional": false
      },
      {
        "lhs": "(VecAdd ?a ?b)",
        "rhs": "(VecAdd ?b ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(VecAdd ?b ?a)",
        "rhs": "(VecAdd ?a ?b)",
        "bidirectional": false
      },
      {
        "lhs": "(- 0 ?a)",
        "rhs": "(neg ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(neg ?a)",
        "rhs": "(- 0 ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(- ?a ?a)",
        "rhs": "(* ?a 0)",
        "bidirectional": false
      },
      {
        "lhs": "(* ?a 0)",
        "rhs": "(- ?a ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(/ ?a 1)",
        "rhs": "(+ ?a 0)",
        "bidirectional": false
      },
      {
        "lhs": "(+ ?a 0)",
        "rhs": "(/ ?a 1)",
        "bidirectional": false
      },
      {
        "lhs": "(/ ?a 1)",
        "rhs": "(* ?a 1)",
        "bidirectional": false
      },
      {
        "lhs": "(* ?a 1)",
        "rhs": "(/ ?a 1)",
        "bidirectional": false
      }
    ]
  },
  {
    "num_rules": 22,
    "time generated": "2023-10-18 13:42:08.916365 -05:00",
    "run name": "slow cvec match, up to depth 5, using depth instead of atoms",
    "eqs": [
      {
        "lhs": "(- ?a 0)",
        "rhs": "(/ ?a 1)",
        "bidirectional": false
      },
      {
        "lhs": "(/ ?a 1)",
        "rhs": "(- ?a 0)",
        "bidirectional": false
      },
      {
        "lhs": "(VecMULS ?c ?a ?b)",
        "rhs": "(VecMULS ?c ?b ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(VecMULS ?c ?b ?a)",
        "rhs": "(VecMULS ?c ?a ?b)",
        "bidirectional": false
      },
      {
        "lhs": "(VecMAC ?c ?a ?b)",
        "rhs": "(VecMAC ?c ?b ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(VecMAC ?c ?b ?a)",
        "rhs": "(VecMAC ?c ?a ?b)",
        "bidirectional": false
      },
      {
        "lhs": "(VecMul ?a ?b)",
        "rhs": "(VecMul ?b ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(VecMul ?b ?a)",
        "rhs": "(VecMul ?a ?b)",
        "bidirectional": false
      },
      {
        "lhs": "(* ?a ?b)",
        "rhs": "(* ?b ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(* ?b ?a)",
        "rhs": "(* ?a ?b)",
        "bidirectional": false
      },
      {
        "lhs": "(+ ?a ?b)",
        "rhs": "(+ ?b ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(+ ?b ?a)",
        "rhs": "(+ ?a ?b)",
        "bidirectional": false
      },
      {
        "lhs": "(VecAdd ?a ?b)",
        "rhs": "(VecAdd ?b ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(VecAdd ?b ?a)",
        "rhs": "(VecAdd ?a ?b)",
        "bidirectional": false
      },
      {
        "lhs": "(- 0 ?a)",
        "rhs": "(neg ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(neg ?a)",
        "rhs": "(- 0 ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(- ?a ?a)",
        "rhs": "(* ?a 0)",
        "bidirectional": false
      },
      {
        "lhs": "(* ?a 0)",
        "rhs": "(- ?a ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(/ ?a 1)",
        "rhs": "(+ ?a 0)",
        "bidirectional": false
      },
      {
        "lhs": "(+ ?a 0)",
        "rhs": "(/ ?a 1)",
        "bidirectional": false
      },
      {
        "lhs": "(/ ?a 1)",
        "rhs": "(* ?a 1)",
        "bidirectional": false
      },
      {
        "lhs": "(* ?a 1)",
        "rhs": "(/ ?a 1)",
        "bidirectional": false
      }
    ]
  },
  {
    "num_rules": 22,
    "time generated": "2023-10-18 13:44:07.339701 -05:00",
    "run name": "slow cvec match, up to depth 5, using depth instead of atoms",
    "eqs": [
      {
        "lhs": "(- ?a 0)",
        "rhs": "(/ ?a 1)",
        "bidirectional": false
      },
      {
        "lhs": "(/ ?a 1)",
        "rhs": "(- ?a 0)",
        "bidirectional": false
      },
      {
        "lhs": "(VecMULS ?c ?a ?b)",
        "rhs": "(VecMULS ?c ?b ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(VecMULS ?c ?b ?a)",
        "rhs": "(VecMULS ?c ?a ?b)",
        "bidirectional": false
      },
      {
        "lhs": "(VecMAC ?c ?a ?b)",
        "rhs": "(VecMAC ?c ?b ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(VecMAC ?c ?b ?a)",
        "rhs": "(VecMAC ?c ?a ?b)",
        "bidirectional": false
      },
      {
        "lhs": "(VecMul ?a ?b)",
        "rhs": "(VecMul ?b ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(VecMul ?b ?a)",
        "rhs": "(VecMul ?a ?b)",
        "bidirectional": false
      },
      {
        "lhs": "(* ?a ?b)",
        "rhs": "(* ?b ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(* ?b ?a)",
        "rhs": "(* ?a ?b)",
        "bidirectional": false
      },
      {
        "lhs": "(+ ?a ?b)",
        "rhs": "(+ ?b ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(+ ?b ?a)",
        "rhs": "(+ ?a ?b)",
        "bidirectional": false
      },
      {
        "lhs": "(VecAdd ?a ?b)",
        "rhs": "(VecAdd ?b ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(VecAdd ?b ?a)",
        "rhs": "(VecAdd ?a ?b)",
        "bidirectional": false
      },
      {
        "lhs": "(- 0 ?a)",
        "rhs": "(neg ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(neg ?a)",
        "rhs": "(- 0 ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(- ?a ?a)",
        "rhs": "(* ?a 0)",
        "bidirectional": false
      },
      {
        "lhs": "(* ?a 0)",
        "rhs": "(- ?a ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(/ ?a 1)",
        "rhs": "(+ ?a 0)",
        "bidirectional": false
      },
      {
        "lhs": "(+ ?a 0)",
        "rhs": "(/ ?a 1)",
        "bidirectional": false
      },
      {
        "lhs": "(/ ?a 1)",
        "rhs": "(* ?a 1)",
        "bidirectional": false
      },
      {
        "lhs": "(* ?a 1)",
        "rhs": "(/ ?a 1)",
        "bidirectional": false
      }
    ]
  },
  {
    "num_rules": 0,
    "time generated": "2023-10-18 13:48:44.131873 -05:00",
    "run name": "slow cvec match, up to depth 5, using depth instead of atoms",
    "eqs": []
  },
  {
    "num_rules": 22,
    "time generated": "2023-10-18 14:00:39.746528 -05:00",
    "run name": "slow cvec match, up to depth 5, using depth instead of atoms",
    "eqs": [
      {
        "lhs": "(- ?a 0)",
        "rhs": "(/ ?a 1)",
        "bidirectional": false
      },
      {
        "lhs": "(/ ?a 1)",
        "rhs": "(- ?a 0)",
        "bidirectional": false
      },
      {
        "lhs": "(VecMULS ?c ?a ?b)",
        "rhs": "(VecMULS ?c ?b ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(VecMULS ?c ?b ?a)",
        "rhs": "(VecMULS ?c ?a ?b)",
        "bidirectional": false
      },
      {
        "lhs": "(VecMAC ?c ?a ?b)",
        "rhs": "(VecMAC ?c ?b ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(VecMAC ?c ?b ?a)",
        "rhs": "(VecMAC ?c ?a ?b)",
        "bidirectional": false
      },
      {
        "lhs": "(VecMul ?a ?b)",
        "rhs": "(VecMul ?b ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(VecMul ?b ?a)",
        "rhs": "(VecMul ?a ?b)",
        "bidirectional": false
      },
      {
        "lhs": "(* ?a ?b)",
        "rhs": "(* ?b ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(* ?b ?a)",
        "rhs": "(* ?a ?b)",
        "bidirectional": false
      },
      {
        "lhs": "(+ ?a ?b)",
        "rhs": "(+ ?b ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(+ ?b ?a)",
        "rhs": "(+ ?a ?b)",
        "bidirectional": false
      },
      {
        "lhs": "(VecAdd ?a ?b)",
        "rhs": "(VecAdd ?b ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(VecAdd ?b ?a)",
        "rhs": "(VecAdd ?a ?b)",
        "bidirectional": false
      },
      {
        "lhs": "(- 0 ?a)",
        "rhs": "(neg ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(neg ?a)",
        "rhs": "(- 0 ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(- ?a ?a)",
        "rhs": "(* ?a 0)",
        "bidirectional": false
      },
      {
        "lhs": "(* ?a 0)",
        "rhs": "(- ?a ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(/ ?a 1)",
        "rhs": "(+ ?a 0)",
        "bidirectional": false
      },
      {
        "lhs": "(+ ?a 0)",
        "rhs": "(/ ?a 1)",
        "bidirectional": false
      },
      {
        "lhs": "(/ ?a 1)",
        "rhs": "(* ?a 1)",
        "bidirectional": false
      },
      {
        "lhs": "(* ?a 1)",
        "rhs": "(/ ?a 1)",
        "bidirectional": false
      }
    ]
  },
  {
    "num_rules": 22,
    "time generated": "2023-11-15 13:32:57.881060 -06:00",
    "run name": "slow cvec match, up to depth 5, using depth instead of atoms",
    "eqs": [
      {
        "lhs": "(- ?a 0)",
        "rhs": "(/ ?a 1)",
        "bidirectional": false
      },
      {
        "lhs": "(/ ?a 1)",
        "rhs": "(- ?a 0)",
        "bidirectional": false
      },
      {
        "lhs": "(VecMULS ?c ?a ?b)",
        "rhs": "(VecMULS ?c ?b ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(VecMULS ?c ?b ?a)",
        "rhs": "(VecMULS ?c ?a ?b)",
        "bidirectional": false
      },
      {
        "lhs": "(VecMAC ?c ?a ?b)",
        "rhs": "(VecMAC ?c ?b ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(VecMAC ?c ?b ?a)",
        "rhs": "(VecMAC ?c ?a ?b)",
        "bidirectional": false
      },
      {
        "lhs": "(VecMul ?a ?b)",
        "rhs": "(VecMul ?b ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(VecMul ?b ?a)",
        "rhs": "(VecMul ?a ?b)",
        "bidirectional": false
      },
      {
        "lhs": "(* ?a ?b)",
        "rhs": "(* ?b ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(* ?b ?a)",
        "rhs": "(* ?a ?b)",
        "bidirectional": false
      },
      {
        "lhs": "(+ ?a ?b)",
        "rhs": "(+ ?b ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(+ ?b ?a)",
        "rhs": "(+ ?a ?b)",
        "bidirectional": false
      },
      {
        "lhs": "(VecAdd ?a ?b)",
        "rhs": "(VecAdd ?b ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(VecAdd ?b ?a)",
        "rhs": "(VecAdd ?a ?b)",
        "bidirectional": false
      },
      {
        "lhs": "(- 0 ?a)",
        "rhs": "(neg ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(neg ?a)",
        "rhs": "(- 0 ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(- ?a ?a)",
        "rhs": "(* ?a 0)",
        "bidirectional": false
      },
      {
        "lhs": "(* ?a 0)",
        "rhs": "(- ?a ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(/ ?a 1)",
        "rhs": "(+ ?a 0)",
        "bidirectional": false
      },
      {
        "lhs": "(+ ?a 0)",
        "rhs": "(/ ?a 1)",
        "bidirectional": false
      },
      {
        "lhs": "(/ ?a 1)",
        "rhs": "(* ?a 1)",
        "bidirectional": false
      },
      {
        "lhs": "(* ?a 1)",
        "rhs": "(/ ?a 1)",
        "bidirectional": false
      }
    ]
  },
  {
    "num_rules": 22,
    "time generated": "2023-11-15 13:53:35.639624 -06:00",
    "run name": "slow cvec match, up to depth 5, using depth instead of atoms",
    "eqs": [
      {
        "lhs": "(- ?a 0)",
        "rhs": "(/ ?a 1)",
        "bidirectional": false
      },
      {
        "lhs": "(/ ?a 1)",
        "rhs": "(- ?a 0)",
        "bidirectional": false
      },
      {
        "lhs": "(VecMULS ?c ?a ?b)",
        "rhs": "(VecMULS ?c ?b ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(VecMULS ?c ?b ?a)",
        "rhs": "(VecMULS ?c ?a ?b)",
        "bidirectional": false
      },
      {
        "lhs": "(VecMAC ?c ?a ?b)",
        "rhs": "(VecMAC ?c ?b ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(VecMAC ?c ?b ?a)",
        "rhs": "(VecMAC ?c ?a ?b)",
        "bidirectional": false
      },
      {
        "lhs": "(VecMul ?a ?b)",
        "rhs": "(VecMul ?b ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(VecMul ?b ?a)",
        "rhs": "(VecMul ?a ?b)",
        "bidirectional": false
      },
      {
        "lhs": "(* ?a ?b)",
        "rhs": "(* ?b ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(* ?b ?a)",
        "rhs": "(* ?a ?b)",
        "bidirectional": false
      },
      {
        "lhs": "(+ ?a ?b)",
        "rhs": "(+ ?b ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(+ ?b ?a)",
        "rhs": "(+ ?a ?b)",
        "bidirectional": false
      },
      {
        "lhs": "(VecAdd ?a ?b)",
        "rhs": "(VecAdd ?b ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(VecAdd ?b ?a)",
        "rhs": "(VecAdd ?a ?b)",
        "bidirectional": false
      },
      {
        "lhs": "(- 0 ?a)",
        "rhs": "(neg ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(neg ?a)",
        "rhs": "(- 0 ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(- ?a ?a)",
        "rhs": "(* ?a 0)",
        "bidirectional": false
      },
      {
        "lhs": "(* ?a 0)",
        "rhs": "(- ?a ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(/ ?a 1)",
        "rhs": "(+ ?a 0)",
        "bidirectional": false
      },
      {
        "lhs": "(+ ?a 0)",
        "rhs": "(/ ?a 1)",
        "bidirectional": false
      },
      {
        "lhs": "(/ ?a 1)",
        "rhs": "(* ?a 1)",
        "bidirectional": false
      },
      {
        "lhs": "(* ?a 1)",
        "rhs": "(/ ?a 1)",
        "bidirectional": false
      }
    ]
  },
  {
    "num_rules": 0,
    "time generated": "2023-11-16 12:16:50.376517 -06:00",
    "run name": "slow cvec match, up to depth 5, using depth instead of atoms",
    "eqs": []
  },
  {
    "num_rules": 22,
    "time generated": "2023-11-21 13:38:10.761225 -06:00",
    "run name": "slow cvec match, up to depth 5, using depth instead of atoms",
    "eqs": [
      {
        "lhs": "(- ?a 0)",
        "rhs": "(/ ?a 1)",
        "bidirectional": false
      },
      {
        "lhs": "(/ ?a 1)",
        "rhs": "(- ?a 0)",
        "bidirectional": false
      },
      {
        "lhs": "(VecMULS ?c ?a ?b)",
        "rhs": "(VecMULS ?c ?b ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(VecMULS ?c ?b ?a)",
        "rhs": "(VecMULS ?c ?a ?b)",
        "bidirectional": false
      },
      {
        "lhs": "(VecMAC ?c ?a ?b)",
        "rhs": "(VecMAC ?c ?b ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(VecMAC ?c ?b ?a)",
        "rhs": "(VecMAC ?c ?a ?b)",
        "bidirectional": false
      },
      {
        "lhs": "(VecMul ?a ?b)",
        "rhs": "(VecMul ?b ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(VecMul ?b ?a)",
        "rhs": "(VecMul ?a ?b)",
        "bidirectional": false
      },
      {
        "lhs": "(* ?a ?b)",
        "rhs": "(* ?b ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(* ?b ?a)",
        "rhs": "(* ?a ?b)",
        "bidirectional": false
      },
      {
        "lhs": "(+ ?a ?b)",
        "rhs": "(+ ?b ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(+ ?b ?a)",
        "rhs": "(+ ?a ?b)",
        "bidirectional": false
      },
      {
        "lhs": "(VecAdd ?a ?b)",
        "rhs": "(VecAdd ?b ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(VecAdd ?b ?a)",
        "rhs": "(VecAdd ?a ?b)",
        "bidirectional": false
      },
      {
        "lhs": "(- 0 ?a)",
        "rhs": "(neg ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(neg ?a)",
        "rhs": "(- 0 ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(- ?a ?a)",
        "rhs": "(* ?a 0)",
        "bidirectional": false
      },
      {
        "lhs": "(* ?a 0)",
        "rhs": "(- ?a ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(/ ?a 1)",
        "rhs": "(+ ?a 0)",
        "bidirectional": false
      },
      {
        "lhs": "(+ ?a 0)",
        "rhs": "(/ ?a 1)",
        "bidirectional": false
      },
      {
        "lhs": "(/ ?a 1)",
        "rhs": "(* ?a 1)",
        "bidirectional": false
      },
      {
        "lhs": "(* ?a 1)",
        "rhs": "(/ ?a 1)",
        "bidirectional": false
      }
    ]
  },
  {
    "num_rules": 14,
    "time generated": "2023-11-21 13:58:39.093010 -06:00",
    "run name": "slow cvec match, up to depth 5, using depth instead of atoms",
    "eqs": [
      {
        "lhs": "(- ?a 0)",
        "rhs": "(* ?a 1)",
        "bidirectional": false
      },
      {
        "lhs": "(* ?a 1)",
        "rhs": "(- ?a 0)",
        "bidirectional": false
      },
      {
        "lhs": "(* ?a ?b)",
        "rhs": "(* ?b ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(* ?b ?a)",
        "rhs": "(* ?a ?b)",
        "bidirectional": false
      },
      {
        "lhs": "(+ ?a ?b)",
        "rhs": "(+ ?b ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(+ ?b ?a)",
        "rhs": "(+ ?a ?b)",
        "bidirectional": false
      },
      {
        "lhs": "(neg ?a)",
        "rhs": "(- 0 ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(- 0 ?a)",
        "rhs": "(neg ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(* ?a 0)",
        "rhs": "(- ?a ?a)",
        "bidirectional": false
      },
      {
        "lhs": "(- ?a ?a)",
        "rhs": "(* ?a 0)",
        "bidirectional": false
      },
      {
        "lhs": "(* ?a 1)",
        "rhs": "(+ ?a 0)",
        "bidirectional": false
      },
      {
        "lhs": "(+ ?a 0)",
        "rhs": "(* ?a 1)",
        "bidirectional": false
      },
      {
        "lhs": "(* ?a 1)",
        "rhs": "(/ ?a 1)",
        "bidirectional": false
      },
      {
        "lhs": "(/ ?a 1)",
        "rhs": "(* ?a 1)",
        "bidirectional": false
      }
    ]
  }
]